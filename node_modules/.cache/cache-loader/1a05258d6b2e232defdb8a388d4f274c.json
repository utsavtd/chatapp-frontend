{"remainingRequest":"/Library/WebServer/Documents/chat-app/node_modules/babel-loader/lib/index.js!/Library/WebServer/Documents/chat-app/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Library/WebServer/Documents/chat-app/src/components/login.vue","dependencies":[{"path":"/Library/WebServer/Documents/chat-app/src/components/login.vue","mtime":1555686390000},{"path":"/Library/WebServer/Documents/chat-app/package.json","mtime":1555681580000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/cache-loader/dist/cjs.js","mtime":1525787659000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import _objectSpread from \"/Library/WebServer/Documents/chat-app/node_modules/@babel/runtime/helpers/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport commonController from \"@/controllers/commonController\";\nimport { mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    var validateLogin = function validateLogin(rule, value, callback) {\n      if (value == \"\") {\n        callback(new Error(\"Please enter the login\"));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value == \"\") {\n        callback(new Error(\"Please enter the password\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      error: true,\n      error_message: \"The Login/Password was incorrect\",\n      ruleForm: {\n        login: \"\",\n        password: \"\"\n      },\n      rules: {\n        login: [{\n          validator: validateLogin,\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: validatePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: _objectSpread({\n    submitForm: function submitForm(loginForm) {\n      var _this = this;\n\n      // remove error\n      this.error = false;\n      this.$refs[loginForm].validate(function (valid) {\n        if (valid) {\n          // set loading to true\n          _this.loading = true; // api call for login\n\n          var data = {\n            email: _this.ruleForm.login,\n            password: _this.ruleForm.password\n          };\n          commonController.doLogin(data).then(function (res) {\n            // set loading to false\n            _this.loading = false; // store in veux\n\n            var data = {\n              first_name: res.data.payload.first_name,\n              last_name: res.data.payload.last_name,\n              email: res.data.payload.email,\n              token: res.data.token\n            };\n\n            _this.setUser(data);\n\n            _this.$router.push(\"event-history\");\n          }).catch(function (err) {\n            _this.error = true;\n            _this.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }, mapActions({\n    setUser: \"setUser\"\n  }))\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AAEA;wBAEA;sEACA;uBACA;2BACA;aACA;AACA;AACA;AACA;;4EACA;uBACA;2BACA;aACA;AACA;AACA;AACA;;;eAEA;aACA;qBACA;;eAEA;kBACA,AACA;AAHA;;;;mBAKA;;;;mBACA,AACA,AACA;;AAJA;AARA;AAaA;AACA;;AACA;;AACA;mBAEA;sDACA;mBACA;AACA;0BAEA,MACA;;;kCAEA;qCACA,AACA;AAHA;AAIA,mCACA;AAEA;4BAEA,MAHA,CAIA;;;2CAEA;0CACA;sCACA;8BACA,AACA;AALA;;0BAOA;;+BACA;AACA,kCACA;0BACA;4BACA;AACA;eACA;iBACA;AACA;AACA;AACA;;aAEA,AACA,AACA;AAHA;AAvEA","file":"login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-row class=\"login\">\n    <el-col\n      :xs=\"24\"\n      :sm=\"{span:14, offset:5}\"\n      :md=\"{span:12, offset:6}\"\n      :lg=\"{span:10, offset:7}\"\n      :xl=\"{span:8, offset:8}\"\n    >\n      <div class=\"grid-content bg-purple-dark\">\n        <!-- Login Form -->\n        <el-form\n          :model=\"ruleForm\"\n          ref=\"ruleForm\"\n          :rules=\"rules\"\n          status-icon\n          label-width=\"120px\"\n          @submit=\"submitForm('ruleForm')\"\n        >\n          <el-card class=\"box-card\">\n            <!-- Admin Login text -->\n            <div slot=\"header\" class=\"header clearfix\">\n              <span>Admin Login</span>\n            </div>\n\n            <div class=\"text item\">\n              <!-- Error -->\n              <p style=\"color: #f00\" v-if=\"error\">{{error_message}}</p>\n              <!-- Login Field -->\n              <el-form-item label=\"Login\" prop=\"login\">\n                <el-input placeholder=\"Enter login\" v-model=\"ruleForm.login\" clearable></el-input>\n              </el-form-item>\n              <!-- Password Field -->\n              <el-form-item label=\"Password\" prop=\"password\">\n                <el-input\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  v-model=\"ruleForm.password\"\n                  clearable\n                ></el-input>\n              </el-form-item>\n              <!-- Login Button -->\n              <el-form-item>\n                <el-button\n                  :loading=\"loading\"\n                  class=\"login-btn\"\n                  type=\"primary\"\n                  @click=\"submitForm('ruleForm')\"\n                >Login</el-button>\n              </el-form-item>\n            </div>\n          </el-card>\n        </el-form>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport commonController from \"@/controllers/commonController\";\nimport { mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    var validateLogin = (rule, value, callback) => {\n      if (value == \"\") {\n        callback(new Error(\"Please enter the login\"));\n      } else {\n        callback();\n      }\n    };\n    var validatePassword = (rule, value, callback) => {\n      if (value == \"\") {\n        callback(new Error(\"Please enter the password\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      error: true,\n      error_message: \"The Login/Password was incorrect\",\n      ruleForm: {\n        login: \"\",\n        password: \"\"\n      },\n      rules: {\n        login: [{ validator: validateLogin, trigger: \"blur\" }],\n        password: [{ validator: validatePassword, trigger: \"blur\" }]\n      }\n    };\n  },\n  methods: {\n    submitForm(loginForm) {\n      // remove error\n      this.error = false;\n\n      this.$refs[loginForm].validate(valid => {\n        if (valid) {\n          // set loading to true\n          this.loading = true;\n\n          // api call for login\n          let data = {\n            email: this.ruleForm.login,\n            password: this.ruleForm.password\n          };\n          commonController\n            .doLogin(data)\n            .then(res => {\n              // set loading to false\n              this.loading = false;\n\n              // store in veux\n              let data = {\n                first_name: res.data.payload.first_name,\n                last_name: res.data.payload.last_name,\n                email: res.data.payload.email,\n                token: res.data.token\n              };\n              this.setUser(data);\n\n              this.$router.push(\"event-history\");\n            })\n            .catch(err => {\n              this.error = true;\n              this.loading = false;\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    ...mapActions({\n      setUser: \"setUser\"\n    })\n  }\n};\n</script>\n<style>\n.login .el-card__header {\n  padding: 0;\n}\n</style>\n<style scoped>\n.login .header {\n  height: 60px;\n  line-height: 60px;\n  color: #fff;\n  font-weight: bold;\n  background: #409eff;\n}\n.login-btn {\n  float: right;\n}\n</style>\n"]}]}