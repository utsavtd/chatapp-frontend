{"remainingRequest":"/Library/WebServer/Documents/chat-app/node_modules/babel-loader/lib/index.js!/Library/WebServer/Documents/chat-app/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Library/WebServer/Documents/chat-app/src/components/chat.vue","dependencies":[{"path":"/Library/WebServer/Documents/chat-app/src/components/chat.vue","mtime":1551990061514},{"path":"/Library/WebServer/Documents/chat-app/package.json","mtime":1525970463000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/cache-loader/dist/cjs.js","mtime":1525787659000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport commonController from '@/controllers/commonController';\nexport default {\n  data: function data() {\n    return {\n      name: '',\n      room: '',\n      chatMessage: '',\n      messages: [],\n      loadingButton: false\n    };\n  },\n  sockets: {\n    connect: function connect() {\n      // Fired when the socket connects.\n      this.isConnected = true;\n      console.log('connected');\n    },\n    disconnect: function disconnect() {\n      this.isConnected = false;\n      console.log('disconnected');\n    },\n    // Fired when the server sends something on the \"msg of questions room\".\n    msg: function msg(data) {\n      console.log('receiving data from questions');\n      var number_of_records = data;\n      console.log(data);\n      this.messages.push(data);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    console.log('local', localStorage.getItem('name'));\n\n    if (localStorage.getItem('name') === null || localStorage.getItem('room') == null || localStorage.getItem('roomId') == null) {\n      this.$router.push('/');\n    }\n\n    this.name = localStorage.getItem('name');\n    this.room = localStorage.getItem('room');\n    commonController.getMessages(localStorage.getItem('room')).then(function (response) {\n      _this.messages = response.data.payload;\n    }).catch(function (e) {\n      _this.errors.push(e);\n    });\n  },\n  methods: {\n    sendChat: function sendChat() {\n      var _this2 = this;\n\n      // Send the \"pingServer\" event to the server.\n      var obj = {\n        sender: this.name,\n        room: this.room,\n        message: this.chatMessage\n      };\n\n      loadingButton: true;\n\n      commonController.sendMessage(obj).then(function (response) {\n        //this.messages=response.data.payload\n        loadingButton: false;\n\n        _this2.chatMessage = \"\";\n      }).catch(function (e) {\n        loadingButton: false;\n\n        console.log(e);\n      });\n    },\n    activateButton: function activateButton() {\n      if (this.chatMessage.length > 1) {\n        return false;\n      }\n\n      return true;\n    }\n  }\n};",{"version":3,"sources":["chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AAEA;wBAEA;;YAGA;YACA;mBACA;gBACA;qBAGA,AACA;AARA;AASA;;gCAEA;AACA;yBACA;kBACA;AAEA;sCACA;yBACA;kBAEA;AAEA;AACA;4BACA;kBACA;8BACA;kBACA;yBAEA;AACA,AACA;AArBA;;AAsBA;;8CAEA;;yCACA,wCACA,gDACA;wBACA;AACA;;qCACA;qCACA;wFACA;qCACA;AACA,0BACA;wBACA;AAEA;AACA;;;AAEA;;AACA;;qBAEA;mBACA;sBACA,AACA;AAJA;;qBAKA;;iEACA;AACA;uBACA;;6BACA;AACA,4BACA;uBACA;;oBACA;AACA;AAEA;8CACA;uCACA;eACA;AACA;;aACA;AAIA,AACA;AA7BA;AArDA","file":"chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div style=\"text-align: center;\n    margin: 0 auto;\n    width: 60%;\">\n\n\t\t<div class=\"before-question-container\">\n\t\t\t<h3>Hi  {{name}} Welcome to {{room}}</h3>\n\t\t\t<div style=\"min-height: 20px; max-height: 300px; overflow-y: scroll;\">\n\t\t\t\tchat messages\n\t\t\t\t<div style=\" margin: 5px;padding: 3px;float: left;\nwidth: 100%; text-align: left;\n\"  v-for=\"message in messages\">\n\t\t\t\t\t<span style=\"font-weight: bold;\">{{message.sender}}</span> :\n\n\t\t\t\t\t<span style=\"font-style: italic\">{{message.message}}</span>\n\n\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div >\n\n\t\t\t\t<el-input placeholder=\"Please enter your name\" v-model=\"chatMessage\"\n\t\t\t\t\t\t  @change=\"activateButton()\" style=\"width: 54%;float: left\"></el-input>\n\n\t\t\t\t<el-button class=\"button-without-radius\" :class=\"{'disable-button':activateButton()}\" type=\"primary\"\n\t\t\t\t\t\t   :loading=\"loadingButton\"\n\t\t\t\t\t\t   @click=\"sendChat()\">Chat\n\t\t\t\t</el-button>\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t</div>\n</template>\n\n<script>\n\timport commonController from '@/controllers/commonController'\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\n\t\t\t\tname:'',\n\t\t\t\troom:'',\n\t\t\t\tchatMessage:'',\n\t\t\t\tmessages:[],\n\t\t\t\tloadingButton:false\n\n\n\t\t\t}\n\t\t},\n\t\tsockets: {\n\t\t\tconnect() {\n\t\t\t\t// Fired when the socket connects.\n\t\t\t\tthis.isConnected = true;\n\t\t\t\tconsole.log('connected')\n\t\t\t},\n\n\t\t\tdisconnect() {\n\t\t\t\tthis.isConnected = false;\n\t\t\t\tconsole.log('disconnected')\n\n\t\t\t},\n\n\t\t\t// Fired when the server sends something on the \"msg of questions room\".\n\t\t\tmsg(data) {\n\t\t\t\tconsole.log('receiving data from questions')\n\t\t\t\tlet number_of_records = data\n\t\t\t\tconsole.log(data)\n\t\t\t\tthis.messages.push(data)\n\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tconsole.log('local', localStorage.getItem('name'))\n\n\t\t\tif (localStorage.getItem('name') === null\n\t\t\t\t|| localStorage.getItem('room')==null\n\t\t\t\t||localStorage.getItem('roomId')==null) {\n\t\t\t\tthis.$router.push('/')\n\t\t\t}\n\t\t\tthis.name=localStorage.getItem('name')\n\t\t\tthis.room=localStorage.getItem('room')\n\t\t\tcommonController.getMessages(localStorage.getItem('room')).then(response => {\n\t\t\t\tthis.messages=response.data.payload\n\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tthis.errors.push(e)\n\t\t\t\t})\n\n\t\t},\n\t\tmethods: {\n\t\t\tsendChat() {\n\t\t\t\t// Send the \"pingServer\" event to the server.\n\t\t\t\tlet obj={\n\t\t\t\t\tsender:this.name,\n\t\t\t\t\troom:this.room,\n\t\t\t\t\tmessage:this.chatMessage\n\t\t\t\t}\n\t\t\t\tloadingButton:true\n\t\t\t\tcommonController.sendMessage(obj).then(response => {\n\t\t\t\t\t//this.messages=response.data.payload\n\t\t\t\t\tloadingButton:false\n\t\t\t\t\tthis.chatMessage=\"\"\n\t\t\t\t})\n\t\t\t\t\t.catch(e => {\n\t\t\t\t\t\tloadingButton:false\n\t\t\t\t\t\tconsole.log(e)\n\t\t\t\t\t})\n\t\t\t},\n\n\t\t\tactivateButton() {\n\t\t\t\tif (this.chatMessage.length>1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\n\n\n\t\t}\n\t}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\th1 {\n\t\tmargin: 10px 0px 40px 0px;\n\t}\n\n\tul {\n\t\tlist-style-type: none;\n\t\tpadding: 0;\n\t}\n\t.image {\n\t\twidth: 60%;\n\t\tmargin-bottom: 30px;\n\n\t}\n\n\tli {\n\t\tbackground-color: #fff; /* Green */\n\t\tborder: #d6d2d2 1px solid;\n\t\tpadding: 15px 32px;\n\t\twidth: 400px;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tmargin: 0 auto;\n\t\tcursor: pointer;\n\t\tborder-radius: 25px;\n\t\tmargin-bottom: 20px;\n\t}\n\n\ta {\n\t\tcolor: #42b983;\n\t}\n\n\t.button-container {\n\t\twidth: 100%;\n\t\tmargin: 0 auto;\n\t}\n\n\t.button {\n\t\tbackground-color: #fff; /* Green */\n\t\tborder: #d6d2d2 1px solid;\n\t\tpadding: 15px 32px;\n\t\twidth: 400px;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tmargin: 0 auto;\n\t\tcursor: pointer;\n\t\tborder-radius: 25px;\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.button:hover {\n\t\tbackground: #56C895;\n\t\tcolor: #fff;\n\t}\n\n\t.buttonSelected {\n\t\tbackground: #56C895;\n\t\tcolor: #fff;\n\n\t}\n\n\t.bottom-text {\n\t\tposition: absolute;\n\t\tbottom: 5px;\n\t\twidth: 100%;\n\t\ttext-align: center\n\t}\n\n\t.disable-button {\n\t\tpointer-events: none;\n\t}\n\n\t.el-alert {\n\t\twidth: 30%;\n\t\tposition: absolute;\n\t\ttop: 45%;\n\t\tleft: 35%;\n\t\tpadding: 11px 18px;\n\t\tborder-radius: 25px;\n\n\t}\n\n\t.el-alert__title {\n\t\tfont-size: 16px !important;\n\t\tline-height: 18px !important;\n\t\tfont-weight: bold !important;\n\t}\n\n\t.el-alert__closebtn {\n\t\tfont-size: 12px;\n\t\tcolor: #fff;\n\t\topacity: 1;\n\t\ttop: 15px;\n\t\tright: 15px;\n\t\tposition: absolute;\n\t\tcursor: pointer;\n\t}\n\n\t@media only screen and (max-width: 768px) {\n\t\t.button {\n\t\t\twidth: 85%;\n\t\t}\n\n\t\t.el-alert {\n\t\t\twidth: 70%;\n\t\t\tposition: absolute;\n\t\t\ttop: 45%;\n\t\t\tleft: 15%;\n\t\t}\n\n\t}\n\n</style>\n"]}]}