{"remainingRequest":"/Library/WebServer/Documents/chat-app/node_modules/babel-loader/lib/index.js!/Library/WebServer/Documents/chat-app/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Library/WebServer/Documents/chat-app/src/components/room.vue","dependencies":[{"path":"/Library/WebServer/Documents/chat-app/src/components/room.vue","mtime":1555686786000},{"path":"/Library/WebServer/Documents/chat-app/package.json","mtime":1555681580000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/cache-loader/dist/cjs.js","mtime":1525787659000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Library/WebServer/Documents/chat-app/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Library/WebServer/Documents/chat-app/node_modules/@babel/runtime/helpers/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport commonController from \"@/controllers/commonController\";\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    var validateCreateRoom = function validateCreateRoom(rule, value, callback) {\n      if (value == \"\") {\n        callback(new Error(\"Please enter room name\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      tableData: [],\n      dialogVisible: false,\n      formLabelWidth: \"120px\",\n      form: {\n        room_name: \"\",\n        status: \"active\"\n      },\n      rules: {\n        room_name: [{\n          validator: validateCreateRoom,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getRoomList();\n  },\n  computed: _objectSpread({}, mapGetters({\n    loading: \"loading\"\n  })),\n  methods: _objectSpread({\n    getRoomList: function getRoomList() {\n      var _this = this;\n\n      var dis = this; // set loading to true\n\n      this.setLoading(true); // get room data\n\n      commonController.getRoom().then(function (res) {\n        var data;\n        res.data.payload.forEach(function (each, ind) {\n          data = {\n            name: each.name,\n            date: each.updatedAt.split(\"T\")[0],\n            time: each.updatedAt.split(\"T\")[1].split(\".\")[0]\n          };\n          dis.tableData.push(data);\n        }); // set loading to false\n\n        _this.setLoading(false);\n      }).catch(function (err) {\n        // set loading to false\n        _this.setLoading(false);\n\n        console.log(err.response);\n      });\n    },\n    createRoom: function createRoom(createForm) {\n      var _this2 = this;\n\n      this.$refs[createForm].validate(function (valid) {\n        if (valid) {\n          // set loading to true\n          _this2.setLoading(true);\n\n          var data = {\n            name: _this2.form.room_name,\n            status: \"active\"\n          };\n          commonController.createRoom(data).then(function (res) {\n            // set loading to false\n            _this2.setLoading(false); // get room list\n\n\n            _this2.getRoomList(); // close dialog\n\n\n            _this2.dialogVisible = false;\n          }).catch(function (err) {\n            // set loading to false\n            _this2.setLoading(false);\n\n            console.log(res.response);\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }, mapActions({\n    setLoading: \"setLoading\"\n  }))\n};",{"version":3,"sources":["room.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AAEA;wBAEA;gFACA;uBACA;2BACA;aACA;AACA;AACA;AACA;;;iBAEA;qBACA;sBACA;;mBAEA;gBACA,AACA;AAHA;;;;mBAKA,AACA,AACA;;AAHA;AARA;AAYA;8BACA;SACA;AACA;AACA;aAEA,AACA,AACA;AAHA;AAIA;;AACA;;gBACA,MACA;;sBAEA,OACA;;AACA,uBACA;YAEA;sDACA;;uBAEA;4CACA;0DACA,AACA;AAJA;6BAKA;AAEA,WAVA,CAWA;;yBACA;AACA,8BACA;AACA;yBAEA;;wBACA;AACA;AACA;;AACA;;uDACA;mBACA;AACA;4BAEA;;;8BAEA;oBACA,AACA;AAHA;AAIA,sCACA;AAEA;8BAEA,QACA;;;mBAEA,cANA,CAOA;;;mCACA;AACA,kCACA;AACA;8BAEA;;4BACA;AACA;eACA;iBACA;AACA;AACA;AACA;;gBAEA,AACA,AACA;AAHA;AA7FA","file":"room.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col :span=\"10\" :offset=\"14\">\n        <el-button\n          style=\"float:right; margin-bottom: 15px;\"\n          size=\"small\"\n          @click=\"dialogVisible = true\"\n        >Add New Room</el-button>\n\n        <!-- Dialog box -->\n        <el-dialog title=\"Create Room\" :visible.sync=\"dialogVisible\" :lock-scroll=\"true\">\n          <el-form :model=\"form\" :rules=\"rules\" ref=\"form\">\n            <!-- Room name -->\n            <el-form-item label=\"Room Name\" :label-width=\"formLabelWidth\" prop=\"room_name\">\n              <el-input v-model=\"form.room_name\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n\n            <!-- Status -->\n            <el-form-item label=\"Status\" :label-width=\"formLabelWidth\" prop=\"room_name\">\n              <el-select style=\"float:left;\" v-model=\"form.status\" placeholder=\"Status\">\n                <el-option label=\"Active\" value=\"active\"></el-option>\n                <el-option label=\"In Active\" value=\"inactive\"></el-option>\n              </el-select>\n            </el-form-item>\n          </el-form>\n          <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n            <el-button type=\"primary\" @click=\"createRoom('form')\">Save</el-button>\n          </span>\n        </el-dialog>\n      </el-col>\n    </el-row>\n    <!-- Table -->\n    <el-table :data=\"tableData\" border stripe style=\"width: 100%\">\n      <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\n      <el-table-column prop=\"date\" label=\"Date\"></el-table-column>\n      <el-table-column prop=\"time\" label=\"Time\"></el-table-column>\n      <el-table-column label=\"action\">\n        <template slot-scope=\"scope\">\n          <el-button style=\"float:left;\" size=\"small\">Edit</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport commonController from \"@/controllers/commonController\";\nimport { mapActions, mapGetters } from \"vuex\";\n\nexport default {\n  data() {\n    var validateCreateRoom = (rule, value, callback) => {\n      if (value == \"\") {\n        callback(new Error(\"Please enter room name\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      tableData: [],\n      dialogVisible: false,\n      formLabelWidth: \"120px\",\n      form: {\n        room_name: \"\",\n        status: \"active\"\n      },\n      rules: {\n        room_name: [{ validator: validateCreateRoom, trigger: \"blur\" }]\n      }\n    };\n  },\n  mounted() {\n    this.getRoomList();\n  },\n  computed: {\n    ...mapGetters({\n      loading: \"loading\"\n    })\n  },\n  methods: {\n    getRoomList() {\n      let dis = this;\n      // set loading to true\n      this.setLoading(true);\n\n      // get room data\n      commonController\n        .getRoom()\n        .then(res => {\n          let data;\n          res.data.payload.forEach(function(each, ind) {\n            data = {\n              name: each.name,\n              date: each.updatedAt.split(\"T\")[0],\n              time: each.updatedAt.split(\"T\")[1].split(\".\")[0]\n            };\n            dis.tableData.push(data);\n          });\n\n          // set loading to false\n          this.setLoading(false);\n        })\n        .catch(err => {\n          // set loading to false\n          this.setLoading(false);\n\n          console.log(err.response);\n        });\n    },\n    createRoom(createForm) {\n      this.$refs[createForm].validate(valid => {\n        if (valid) {\n          // set loading to true\n          this.setLoading(true);\n\n          let data = {\n            name: this.form.room_name,\n            status: \"active\"\n          };\n          commonController\n            .createRoom(data)\n            .then(res => {\n              // set loading to false\n              this.setLoading(false);\n\n              // get room list\n              this.getRoomList();\n\n              // close dialog\n              this.dialogVisible = false;\n            })\n            .catch(err => {\n              // set loading to false\n              this.setLoading(false);\n\n              console.log(res.response);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    ...mapActions({\n      setLoading: \"setLoading\"\n    })\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}